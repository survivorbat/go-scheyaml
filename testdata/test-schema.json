{
  "type": "object",
  "patternProperties": {
    "^object.*$": {
      "properties": {
        "anotherProperty": {
          "type": "string",
          "description": "Pattern property test",
          "default": "Added by pattern property"
        }
      }
    }
  },
  "properties": {
    "stringProperty": {
      "$ref": "#/$defs/HelloWorld"
    },
    "integerProperty": {
      "type": "integer",
      "default": 20,
      "description": "Do integers work as well?",
      "examples": [
        1,
        5,
        7
      ]
    },
    "numberProperty": {
      "type": "number",
      "default": 12,
      "description": "Numbers should work too",
      "examples": [
        5,
        7
      ]
    },
    "nullProperty": {
      "type": "null",
      "default": false,
      "description": "Null is a valid option",
      "examples": [
        null
      ]
    },
    "booleanProperty": {
      "type": "boolean",
      "default": false,
      "description": "Booleans are simple",
      "examples": [
        true,
        false
      ]
    },
    "objectProperty": {
      "type": "object",
      "description": "Nested object",
      "properties": {
        "deepPropertyWithoutDescription": {
          "type": "string",
          "examples": [
            "a",
            "b",
            "d"
          ]
        }
      }
    },
    "arrayProperty": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "magicNumber": {
            "type": "integer",
            "description": "A magic number",
            "examples": [
              12,
              25,
              62
            ]
          }
        }
      }
    }
  },
  "$defs": {
    "HelloWorld": {
      "type": "string",
      "default": "Hello World!",
      "description": "This property is for testing string Scalar nodes. On top of that, it will also check that this description wrapped into multiple new lines to keep it readable in the YAML output.\n\nAlso, native newlines in a description should be respected.",
      "examples": [
        "Hello",
        "World",
        "Foo"
      ]
    }
  }
}
